---
- hosts: 'all'
  remote_user: 'ubuntu'
  sudo: yes

  vars_files:
    - vars/default.yml

#  pre_tasks:
#      - name: 'account | create'
#        user: 'name={{ user }} password={{ password }} shell=/bin/bash'

  roles:
    - role: rvm_io.rvm1-ruby
      tags: ruby
      sudo: True
      rvm1_gpg_keys: '409B6B1796C275462A1703113804BB82D39DC0E3'
#      rvm1_autolib_mode: 1
      rvm1_rubies:
        - 'ruby-2.3.0'
    - webserver
    - database

  tasks:
#    - name: 'apt | update'
#      action: 'apt update_cache=yes'

#    - name: 'apt | install dependencies'
#      action: 'apt pkg={{ item }}'
#      with_items:
#        - 'build-essential'
#        - 'libssl-dev'
#        - 'libyaml-dev'
#        - 'libreadline6-dev'
#        - 'zlib1g-dev'
#        - 'libcurl4-openssl-dev'
#        - 'git'
#        - 'nginx'
#        - 'redis-server'
#        - 'postgresql'
#        - 'postgresql-contrib'
#        - 'libpq-dev'
#        - 'imagemagick'
#        - 'libmagickwand-dev'
#        - 'nodejs'
#        - 'htop'

#    - name: 'account | authorized keys'
#      authorized_key: user=deploy key="{{ lookup('file', 'keys/id_rsa.pub') }}"

#    - name: 'account | copy ssh private key'
#      copy: 'src=keys/id_rsa dest={{ home }}/.ssh/id_rsa owner={{ user }} group={{ user }} mode=0600'
#
#    - name: 'account | copy ssh public key'
#      copy: 'src=keys/id_rsa.pub dest={{ home }}/.ssh/id_rsa.pub owner={{ user }} group={{ user }} mode=0644'
#
#    - name: 'nginx | check config'
#      command: 'test -f /etc/nginx/sites-enabled/{{ name }}.conf'
#      register: 'nginx_config_copied'
#      ignore_errors: yes
#
#    - name: 'nginx | createdir'
#      shell: 'rm /etc/nginx/sites-enabled/default; mkdir -p etc/nginx/sites-enabled/'
#      when: 'nginx_config_copied|failed'
#
#    - name: 'nginx | copy config'
#      template: 'src=configs/nginx.conf dest=/etc/nginx/sites-enabled/{{ name }}.conf owner=root group=root mode=0644'
#      when: 'nginx_config_copied|failed'
#
#    - name: 'nginx | restart service'
#      service: name=nginx state=restarted
#      when: 'nginx_config_copied|failed'
